name: CI â€“ Build & Publish Docker Image

on:
  push:
    branches:
      - release

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    services:
      db-marlin:
        image: timescale/timescaledb-ha:pg17
        ports:
          - 6000:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: sql
          POSTGRES_DB: marlin
        options: >-
          --health-cmd="pg_isready -U user -d marlin"
          --health-interval=3s
          --health-timeout=3s
          --health-retries=30

    env:
      CONTAINER_IMAGE_NAME: marlin-backend
      CONTAINER_REGISTRY_URL: docker.io
      CONTAINER_REGISTRY_USERNAME: marlinlive
      CONTAINER_REGISTRY_TOKEN: ${{ secrets.CONTAINER_REGISTRY_ACCESS_TOKEN }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DEPLOY_KEY: ${{ secrets.MARLIN_DEPLOY_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: "21"
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY_URL }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.CONTAINER_REGISTRY_USERNAME }}/${{ env.CONTAINER_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.CONTAINER_REGISTRY_USERNAME }}/${{ env.CONTAINER_IMAGE_NAME }}:latest
          cache-to: type=inline

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.DEPLOY_KEY }}
          script: |
            sudo systemctl stop marlin.service
            docker pull ${{ env.CONTAINER_REGISTRY_USERNAME }}/${{ env.CONTAINER_IMAGE_NAME }}:latest
            sudo systemctl start marlin.service